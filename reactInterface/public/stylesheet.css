:root {
    --shade: green,
}



html {
    background-color: #222121;
    line-height: 1.5;
    color: white;
    vertical-align: middle;
    font-family: 'Roboto', sans-serif;
    font-size: medium;
    overflow-x: hidden;
}

.flex {
    display: flex;
    align-items: center;
    justify-content: space-around;
}

.app {
    width: 100%;
    height: 100%;
}

* {
    box-sizing: border-box;
  }

::-webkit-scrollbar {
    width: 10px;
}

::-webkit-scrollbar-track {
    background-color: #141313;
}

::-webkit-scrollbar-thumb {
    background: #3b3b3b;
    height: 100px;
    border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
    background: rgb(48, 48, 75); 
}


.titleDiv {
    width: 100%;
    text-shadow: 0px 0px 3px rgba(255, 255, 255, 0.514);
    display: flex;
    height: 60px;
    background-color: #141313;
}

.titleDiv {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-left: 17px;
    padding-right: 17px;
}


.rectangleDiv {
    width: 100%;
    margin-top: 30px;
    border-radius: 15px;
    background: linear-gradient(145deg, #1f1e1e, #242323);
    box-shadow: 8px 8px 18px #131212, -8px -8px 18px #313030;
    overflow: hidden;
}

.menuItem {
    min-height: inherit;
    opacity: 1;
    transition-delay: 0.5s;
    transition: opacity 0.3s;
  }
  
  .menuItem .minimized {
    display: none;
    opacity: 0;
    pointer-events: none; 
  }

  .minimized {
    min-height: 0;
    height: 0px;
    padding: 0;
    opacity: 0;
    transition: min-height 0.3s ease, opacity 0.3s ease;
}



.rightItemsContainer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    justify-content: flex-end;
    flex-direction: row;
    width: 8%;
}

.rightItemsContainer > * {
    margin-left: 10px; /* Adjust the value to control the spacing */
}

.resizeArrowContainer {
    height: 35px;
    width:  35px;
    border-radius: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #2b2c2e;
}

.resizeArrowContainer:hover {
    color: #0078af;
    cursor: pointer;
}

.potentialDivContainer {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    grid-gap: 20px;
    overflow: hidden;
    padding: 10px;
    min-height: 200px;

}

.displayFlex {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
    flex-direction: column;
}

.backgroundContainerStyle {
    background-color: #161616;
    border-radius: 15px;
    padding: 3px;
}

 .optionsGrid {
    width:  100%;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr; /* Three columns */
    grid-template-rows: auto; /* Make the rows automatically expand to container height */
    grid-gap: 10px;
 }

 .optionsGrid > div {
    display: flex;
    align-items: center;
    vertical-align: middle;
    justify-content: center;
    margin-top: auto;
    margin-bottom: auto;
 }

 .RGBCreatorHorizontalContainer {
    display: flex;
    justify-content: space-around;
    vertical-align: middle;
    align-items: center;
    width: 200px;
    height: 50px;
    border-radius: 15px;
    text-shadow: 0px 0px 3px white;
    background-color: #161616;
    overflow: hidden;
 }

  .label {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
  }

  .toggle {
    isolation: isolate;
    position: relative;
    height: 30px;
    width: 60px;
    border-radius: 15px;
    overflow: hidden;
    box-shadow:
    5px 5px 10px #141313,
    -5px -5px 10px #302f2f,
    0px 0px 15px 5px #132932,
    4px 4px 4px 0px #222121 inset,
    -4px -4px 4px 0px #222121 inset;
  }

  .toggle-state {
    display: none;
  }
  
  .indicator {
    height: 100%;
    width: 200%;
    background: #132932;
    border-radius: 15px;
    transform: translate3d(-75%, 0, 0);
    transition: transform 0.4s cubic-bezier(0.85, 0.05, 0.18, 1.35);
  }
  
  .toggle-state:checked ~ .indicator {
    transform: translate3d(25%, 0, 0);
  }

